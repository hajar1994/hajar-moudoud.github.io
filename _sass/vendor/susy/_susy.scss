// Simple Susy grid mixin replacement
// Original Susy library: https://github.com/oddbird/susy

@mixin border-box-sizing {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

@mixin container($width: 100%) {
  max-width: $width;
  margin-left: auto;
  margin-right: auto;
}

// span() function to calculate width percentage (for use in calculations)
@function span($span) {
  @if type-of($span) == 'string' {
    $index: str-index($span, ' of ');

    @if $index {
      $numerator-str: str-trim(str-slice($span, 1, $index - 1));
      $rest: str-slice($span, $index + 4);
      $denominator-end: str-index($rest, ' ');

      @if $denominator-end {
        $denominator-str: str-trim(str-slice($rest, 1, $denominator-end - 1));
      } @else {
        $denominator-str: str-trim($rest);
      }

      $numerator: to-number($numerator-str);
      $denominator: to-number($denominator-str);

      @if type-of($numerator) == 'number' and type-of($denominator) == 'number' {
        @return ($numerator / $denominator) * 100%;
      }
    }
  }

  @if type-of($span) == 'number' {
    @return $span;
  }

  @return 0%;
}

// span() mixin for applying width and float (for use with @include)
@mixin span($span) {
  @if type-of($span) == 'string' {
    $index: str-index($span, ' of ');

    @if $index {
      $numerator: str-slice($span, 1, $index - 1);
      $rest: str-slice($span, $index + 4);
      $denominator-end: str-index($rest, ' ');

      @if $denominator-end {
        $denominator: str-slice($rest, 1, $denominator-end - 1);
        $width: (to-number($numerator) / to-number($denominator)) * 100%;

        @if str-index($span, 'last') {
          float: right;
          margin-right: 0;
        } @else if str-index($span, 'rtl') {
          float: right;
        } @else {
          float: left;
        }

        width: $width;
      } @else {
        $denominator: $rest;
        $width: (to-number($numerator) / to-number($denominator)) * 100%;
        float: left;
        width: $width;
      }
    }
  } @else {
    width: $span;
    float: left;
  }
}

// Helper function to trim whitespace from string
@function str-trim($string) {
  $start: 1;
  $end: str-length($string);

  // Trim leading spaces
  @while $start <= $end and str-slice($string, $start, $start) == ' ' {
    $start: $start + 1;
  }

  // Trim trailing spaces
  @while $end >= $start and str-slice($string, $end, $end) == ' ' {
    $end: $end - 1;
  }

  @return str-slice($string, $start, $end);
}

// Helper function to convert string to number (handles decimals)
@function to-number($string) {
  @if type-of($string) == 'number' {
    @return $string;
  }

  // Trim whitespace
  $string: str-trim($string);

  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
  $numbers: 0 1 2 3 4 5 6 7 8 9;
  $result: 0;
  $divider: 0;
  $minus: false;

  @for $i from 1 through str-length($string) {
    $character: str-slice($string, $i, $i);
    $index: index($strings, $character);

    @if $character == '-' {
      $minus: true;
    } @else if $character == '.' {
      $divider: 1;
    } @else if $index {
      $number: nth($numbers, $index);
      @if $divider == 0 {
        $result: $result * 10 + $number;
      } @else {
        $divider: $divider * 10;
        $result: $result + $number / $divider;
      }
    }
  }

  @if $minus {
    @return -$result;
  }
  @return $result;
}
